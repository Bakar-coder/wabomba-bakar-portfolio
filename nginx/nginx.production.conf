# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream client {
  server client:3000;
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  server_name your-domain www.your-domain;
  
  gzip on;
  gzip_proxied any;
  gzip_comp_level 2;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/css  application/x-javascript application/javascript  application/xml text/xml image/svg+xml text$;

  client_body_timeout 12;
  client_header_timeout 12;
  reset_timedout_connection on;
  server_tokens off;
  client_max_body_size 50m;
  access_log off;
  log_not_found off;

  ssl_certificate /etc/letsencrypt/live/your-domain/fullchain.pem
  ssl_certificate_key /etc/letsencrypt/live/your-domain/privkey.pem

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Host $server_name;
  proxy_cache_bypass $http_upgrade;
  proxy_redirect off;
  proxy_pass_request_headers on;

  # BUILT ASSETS (E.G. JS BUNDLES)
  # Browser cache - max cache headers from Next.js as build id in url
  # Server cache - valid forever (cleared after cache "inactive" period)
  location /build {
    proxy_cache STATIC;
    proxy_pass http://client;
  }

  # STATIC ASSETS (E.G. IMAGES)
  # Browser cache - "no-cache" headers from Next.js as no build id in url
  # Server cache - refresh regularly in case of changes
  location /build/public {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://client;
  }

  # DYNAMIC ASSETS - NO CACHE
  location / {
    proxy_pass http://client;
  }

   location ~ /.well-known {
    allow all;
  }
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name your-domain www.your-domain;
    return 301 https://$host$request_url;
}
